{
  "_version": "19.4.0",
  "compilerOptions": {
    /* Projects */
    "target": "ES6" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": ["es2022"],
    "typeRoots": ["./node_modules/@types", "./types"],
    /* Modules */
    "module": "CommonJS" /* Specify what module code is generated. */,
    "rootDir": "./" /* Specify the root folder within your source files. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    /* JavaScript Support */
    /* Emit */
    "removeComments": true /* Disable emitting comments. */,
    //"importsNotUsedAsValues": "error", /* Specify emit/checking behavior for imports that are only used for types. */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    // "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    // "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
    "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
    "noPropertyAccessFromIndexSignature": true /*   Enforces using indexed accessors for keys declared using an indexed type. */,
    "allowUnusedLabels": false /* Disable error reporting for unused labels. */,
    "allowUnreachableCode": false /* Disable error reporting for unreachable code. */,
    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "outDir": "./build",
    "allowJs": true
  },
  "include": ["./**/*"],
  "exclude": ["node_modules"]
}
